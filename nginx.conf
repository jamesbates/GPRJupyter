user nginx nginx;
worker_processes 1;

error_log /var/log/nginx/error_log info;

events {
	worker_connections 1024;
	use epoll;
}

http {
	include /etc/nginx/mime.types.nginx;
	types_hash_max_size 4096;
	default_type application/octet-stream;

	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';

	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;

	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;

	gzip off;

	output_buffers 1 32k;
	postpone_output 1460;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	keepalive_timeout 75 20;

	ignore_invalid_headers on;

	index index.html;

	#server {
#		listen 127.0.0.1;
#		server_name localhost;
#
#		access_log /var/log/nginx/localhost.access_log main;
#		error_log /var/log/nginx/localhost.error_log info;
#
#		root /var/www/localhost/htdocs;
#	}

	# SSL example
	#server {
	#	listen 127.0.0.1:443;
	#	server_name localhost;

	#	ssl on;
	#	ssl_certificate /etc/ssl/nginx/nginx.pem;
	#	ssl_certificate_key /etc/ssl/nginx/nginx.key;

	#	access_log /var/log/nginx/localhost.ssl_access_log main;
	#	error_log /var/log/nginx/localhost.ssl_error_log info;

	#	root /var/www/localhost/htdocs;
	#}#
	map $http_upgrade $connection_upgrade {
	    default upgrade;
	    ''      close;
	}

	server {
	    listen        80;
	    server_name   localhost;
	    proxy_set_header Host $host;
		
	    gzip_min_length     1000;
    	    gzip_buffers        4 8k;
    	    gzip_http_version   1.0;
    	    gzip_disable        "msie6";
    	    gzip_vary           on;
    	    gzip on;
    	    gzip_proxied any;
    	    gzip_types
	        text/css
	        text/javascript
	        text/xml
	        text/plain
	        application/javascript
	        application/x-javascript
	        application/json;

	    large_client_header_buffers 4 32k;

	    location / {
		proxy_pass http://localhost:8000;
	    }

	    location ~ /nomad-oasis\/?(gui)?$ {
		rewrite ^ /nomad-oasis/gui/ permanent;
	    }

	    location /nomad-oasis/gui/ {
		proxy_intercept_errors on;
		error_page 404 = @redirect_to_index;
		proxy_pass http://localhost:8000;
	    }

	    location @redirect_to_index {
		rewrite ^ /nomad-oasis/gui/index.html break;
		proxy_pass http://localhost:8000;
	    }

	    location ~ \/gui\/(service-worker\.js|meta\.json)$ {
		add_header Last-Modified $date_gmt;
		add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
		if_modified_since off;
		expires off;
		etag off;
		proxy_pass http://localhost:8000;
	    }

	    location ~ /api/v1/uploads(/?$|.*/raw|.*/bundle?$) {
		client_max_body_size 35g;
		proxy_request_buffering off;
		proxy_pass http://localhost:8000;
	    }

	    location ~ /api/v1/.*/download {
		proxy_buffering off;
		proxy_pass http://localhost:8000;
	    }

	    location /nomad-oasis/north/ {
	        client_max_body_size 500m;
	        proxy_pass http://localhost:9000;

		proxy_set_header Authorization 'Bearer secret-token';
	        proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header Host $host;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	        # websocket headers
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection $connection_upgrade;
	        proxy_set_header X-Scheme $scheme;

	        proxy_buffering off;
	    }
	}
}
